[
  
  {
    "title": "R-documentation",
    "url": "/posts/R-documentation/",
    "categories": "Blogging, Tutorial",
    "tags": "google analytics, pageviews",
    "date": "2021-01-04 05:02:00 +0530",
    





    "snippet": "Select a language :SQLRPythonGetting ready with the Datasets in BigQueryThe following file had been downloaded fromhttps://ourworldindata.org/covid-deaths on Nov 16th, 2021. To followalong or reproduce this analysis, you may choose to download the latestfile from this link, or use the files used in this project mentionedbelow.Data division into two .csv files  Shift the ‘population’ column between ‘date’ and ‘total_cases’ andsave this file as: ‘covid_full.csv’.  Delete all the columns after Z in covid_full and save this file as:‘covid_deaths.csv’  Delete all the columns from E-Z in covid_full and save this file as:‘covid_vaccinations.csv’These three edited .csv files, in addition to the original source .csvare available on the github page for this project.Loading the data into BigQuery  Go to the ‘Exlorer’ tab in the SQL Workspace.  Click on the three dots menu on your project and click on ‘Createdataset’.  Provide a dataset ID, then click on its menu and click on ‘Createtable’.  Choose the source as Upload, then select and name the appropriatetable.All the three tables will now be displayed under the dataset ID underpinned projects.Previewing the dataCovidFull:#This is a view of the first table- CovidFullSELECT *FROM CovidFUll![test](\\assets\\img\\R-documentation\\01_full.png){: width=&quot;1086&quot; height=&quot;542&quot;}CovidDeaths:--This is a view of the second table- CovidDeathsSELECT *FROM CovidDeaths![test](C:\\Users\\hamda\\repotest\\theme-test\\assets\\img\\R-documentation\\02_deaths.png)  CovidVaccinations:--This is a view of the second table- CovidDeathsSELECT *FROM CovidVaccinations![test](C:\\Users\\hamda\\Pictures\\Proj1\\03_vaccinations.png &quot;fig:&quot;)Details about the dataThese sheets contain x rows and y columnsExploration#1: Infection Percentage and Deaths-per-case PercentageThis query gives a quantitative overview of how the 20 largest countriesin the world dealed with the coronavirus.QUERY:SELECT   date, location, total_deaths, total_cases, population,  (total_deaths*100/total_cases) AS deaths_per_case_perc,  (total_cases*100/population) AS infection_percFROM   CovidDeathsWHERE   date=&#39;2021-11-15&#39; AND continent is not NULLORDER BY   population DESC  /* QUERY EXPLAINATION: - This query first of all selects the existing variables     (or columns) meantioned below, then creates two new ones.     &#39;deaths_per_case_perc&#39; is the number of deaths divided by      total cases in a country represented as a percentage.     &#39;infection_perc&#39; is the total number of cases divided by     the population of that country represented as a percentage.   - The date clause only selects the record (or row) for the      last available date in the data, therefore selects the maximum.     &#39;continent&#39; is not NULL was a requirement as only valid     country names had a continent value where they belonged.   - Finally, &#39;population DESC&#39; arranges the output sorted by the     largest population, therefore the largest countries by     population are shown first*/OUTPUT:![test](C:\\Users\\hamda\\Pictures\\Proj1\\04_deathperc.png &quot;fig:&quot;)INSIGHTS:  china  usaVISUALIZATION:![test](C:\\Users\\hamda\\Pictures\\Proj1\\05_chart.png &quot;fig:&quot;)#2: Insights at the continent scalepppppppppp inforQUERY:SELECT location, total_deaths, total_cases, population,  total_deaths*100/total_cases AS deaths_per_case_perc,  total_cases*100/population AS infection_perc,FROM CovidDeathsWHERE continent is NULL and date=&#39;2021-11-15&#39; AND   (location LIKE &#39;%a&#39; or location LIKE &#39;Europe&#39;)ORDER BY population DESC  # QUERY EXPLAINATION:# -   # - Finally, &#39;population DESC&#39; arranges the output sorted by the#     largest population, therefore the largest countries by#     population are shown firstOUTPUT AND VISUALIZATION:![test](C:\\Users\\hamda\\Pictures\\Proj1\\07_chart.png &quot;fig:&quot;)INSIGHTS:  china  usa#2: Money vs COVIDAny data contains a number of secrets just waiting to be explored. Whilegoing through the distinct locations, there were four special rows therebased on the income rather than the country. I decided to use those todemonstrate the use of GROUP BY clause in SQL.QUERY:# OPTION 1: GROUP BY for maximum valuesSELECT location, MAX(total_deaths) AS total_deaths,   MAX(total_cases) AS total_cases, MAX(population) AS population,  MAX(total_deaths)*100/MAX(total_cases) AS deaths_per_case_perc,   MAX(total_cases)*100/MAX(population) AS infection_percFROM CovidDeathsWHERE continent is NULL AND location LIKE &#39;%income&#39;GROUP BY locationORDER BY total_cases#                         OR# OPTION 2: Manually selecting date for maximum valueSELECT location, total_deaths, total_cases, population,   (total_deaths*100/total_cases) AS deaths_per_case_perc,  (total_cases*100/population) AS infection_percFROM CovidDeathsWHERE continent is NULL AND location LIKE &#39;%income&#39; AND date=&#39;2021-11-15&#39;ORDER BY total_cases# QUERY EXPLAINATION:# - This query first of all selects the existing variables#     (or columns) mentioned below, then creates two new ones.# - OPTION 1 uses the GROUP BY clause, where it has grouped the data#     by the location. You can visualize this data as a tree now,#     where each branch is location and each branches contains #     several leaves. You can choose the biggest leaf, sum of all#     the leaves, etc. I chose the maximum cases (biggest leaf)#     from all the cases of the income branch.# - OPTION 2 proceeds like the previous query, where we knew which#     date corresponds to the maximum values and we simply select#     that row or record using the WHERE clause.OUTPUT AND VISUALIZATION:![test](C:\\Users\\hamda\\Pictures\\Proj1\\06_chart.png &quot;fig:&quot;)INSIGHTS:  china  usa"
  },
  
  {
    "title": "Enable Google Page Views",
    "url": "/posts/google-pv/",
    "categories": "Blogging, Tutorial",
    "tags": "google analytics, pageviews",
    "date": "2021-01-04 05:02:00 +0530",
    





    "snippet": "SQLRPython```{r setup, include=FALSE}knitr::opts_chunk$set(echo = TRUE, eval=TRUE)## Getting ready with the Datasets in BigQueryThe following file had been downloaded from &amp;lt;https://ourworldindata.org/covid-deaths&amp;gt; on Nov 16th, 2021. To follow along or reproduce this analysis, you may choose to download the latest file from this link, or use the files used in this project mentioned below.### Data division into two .csv files- Shift the &#39;population&#39; column between &#39;date&#39; and &#39;total_cases&#39; and save this file as: &#39;covid_full.csv&#39;.- Delete all the columns after Z in covid_full and save this file as: &#39;covid_deaths.csv&#39;- Delete all the columns from E-Z in covid_full and save this file as: &#39;covid_vaccinations.csv&#39;  These three edited .csv files, in addition to the original source .csv are available on the github page for this project.### Loading the data into BigQuery- Go to the &#39;Exlorer&#39; tab in the SQL Workspace.- Click on the three dots menu on your project and click on &#39;Create dataset&#39;.- Provide a dataset ID, then click on its menu and click on &#39;Create table&#39;.- Choose the source as Upload, then select and name the appropriate table.  All the three tables will now be displayed under the dataset ID under pinned projects.### Previewing the dataCovidFull:```{r 01_full, echo = TRUE, eval=FALSE}#This is a view of the first table- CovidFullSELECT *FROM CovidFUll![test](C:\\Users\\hamda\\Pictures\\Proj1\\01_full.png)CovidDeaths:```{r 02_deaths, echo = TRUE, eval=FALSE}#This is a view of the second table- CovidDeathsSELECT *FROM CovidDeaths&amp;lt;center&amp;gt;![test](C:\\Users\\hamda\\Pictures\\Proj1\\02_deaths.png)\\&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;CovidVaccinations:```{r 03_vaccinations, echo = TRUE, eval=FALSE}#This is a view of the second table- CovidDeathsSELECT *FROM CovidVaccinations![test](C:\\Users\\hamda\\Pictures\\Proj1\\03_vaccinations.png)Details about the dataThese sheets contain x rows and y columnsExploration#1: Infection Percentage and Deaths-per-case PercentageThis query gives a quantitative overview of how the 20 largest countries in the world dealed with the coronavirus.QUERY:```{r 04_, echo = TRUE, eval=FALSE}SELECT   date, location, total_deaths, total_cases, population,  (total_deaths100/total_cases) AS deaths_per_case_perc,  (total_cases100/population) AS infection_percFROM   CovidDeathsWHERE   date=’2021-11-15’ AND continent is not NULLORDER BY   population DESCQUERY EXPLAINATION:- This query first of all selects the existing variables(or columns) meantioned below, then creates two new ones.‘deaths_per_case_perc’ is the number of deaths divided bytotal cases in a country represented as a percentage.‘infection_perc’ is the total number of cases divided bythe population of that country represented as a percentage.- The date clause only selects the record (or row) for thelast available date in the data, therefore selects the maximum.‘continent’ is not NULL was a requirement as only validcountry names had a continent value where they belonged.- Finally, ‘population DESC’ arranges the output sorted by thelargest population, therefore the largest countries bypopulation are shown first#### OUTPUT:&amp;lt;center&amp;gt;![test](C:\\Users\\hamda\\Pictures\\Proj1\\04_deathperc.png)&amp;lt;/center&amp;gt;#### INSIGHTS:- china- usa#### VISUALIZATION:&amp;lt;center&amp;gt;![test](C:\\Users\\hamda\\Pictures\\Proj1\\05_chart.png)&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;### #2: Insights at the continent scalepppppppppp infor#### QUERY:```{r 05_, echo = TRUE, eval=FALSE}SELECT location, total_deaths, total_cases, population,  total_deaths*100/total_cases AS deaths_per_case_perc,  total_cases*100/population AS infection_perc,FROM CovidDeathsWHERE continent is NULL and date=&#39;2021-11-15&#39; AND   (location LIKE &#39;%a&#39; or location LIKE &#39;Europe&#39;)ORDER BY population DESC  # QUERY EXPLAINATION:# -   # - Finally, &#39;population DESC&#39; arranges the output sorted by the#     largest population, therefore the largest countries by#     population are shown firstOUTPUT AND VISUALIZATION:![test](C:\\Users\\hamda\\Pictures\\Proj1\\07_chart.png)INSIGHTS:  china  usa#2: Money vs COVIDAny data contains a number of secrets just waiting to be explored. While going through the distinct locations, there were four special rows there based on the income rather than the country. I decided to use those to demonstrate the use of GROUP BY clause in SQL.QUERY:```{r 09_, echo = TRUE, eval=FALSE}OPTION 1: GROUP BY for maximum valuesSELECT location, MAX(total_deaths) AS total_deaths,   MAX(total_cases) AS total_cases, MAX(population) AS population,  MAX(total_deaths)100/MAX(total_cases) AS deaths_per_case_perc,   MAX(total_cases)100/MAX(population) AS infection_percFROM CovidDeathsWHERE continent is NULL AND location LIKE ‘%income’GROUP BY locationORDER BY total_casesOROPTION 2: Manually selecting date for maximum valueSELECT location, total_deaths, total_cases, population,   (total_deaths100/total_cases) AS deaths_per_case_perc,  (total_cases100/population) AS infection_percFROM CovidDeathsWHERE continent is NULL AND location LIKE ‘%income’ AND date=’2021-11-15’ORDER BY total_casesQUERY EXPLAINATION:- This query first of all selects the existing variables(or columns) mentioned below, then creates two new ones.- OPTION 1 uses the GROUP BY clause, where it has grouped the databy the location. You can visualize this data as a tree now,where each branch is location and each branches containsseveral leaves. You can choose the biggest leaf, sum of allthe leaves, etc. I chose the maximum cases (biggest leaf)from all the cases of the income branch.- OPTION 2 proceeds like the previous query, where we knew whichdate corresponds to the maximum values and we simply selectthat row or record using the WHERE clause.```OUTPUT AND VISUALIZATION:![test](C:\\Users\\hamda\\Pictures\\Proj1\\06_chart.png)INSIGHTS:  china  usa"
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 18:25:00 +0530",
    





    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  Forking on GitHub - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterCreate a new repository from the Chirpy Starter and name it &amp;lt;GH_USERNAME&amp;gt;.github.io, where GH_USERNAME represents your GitHub username.Option 2. Forking on GitHubFork Chirpy on GitHub and rename it to &amp;lt;GH_USERNAME&amp;gt;.github.io. Please note that the default branch code is in development.  If you want the site to be stable, please switch to the latest tag and start writing.And then execute:$ bash tools/init.sh  Note: If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:      Removes some files or directories from your repository:          .travis.yml      files under _posts      folder docs            If the option --no-gh is provided, the directory .github will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension .hook of .github/workflows/pages-deploy.yml.hook, and then remove the other files and directories in the folder .github.        Removes item Gemfile.lock from .gitignore.        Creates a new commit to save the changes automatically.  Installing DependenciesBefore running for the first time, go to the root directory of your site, and install dependencies as follows:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langCustoming StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of the style file.Starting from v4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, create a new file _sass/variables-hook.scss and assign new values to the target variable in it.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\    --volume=&quot;$PWD:/srv/jekyll&quot; \\    -p 4000:4000 jekyll/jekyll \\    jekyll serveAfter a while, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using Github ActionsFor security reasons, GitHub Pages build runs on safe mode, which restricts us from using plugins to generate additional page files. Therefore, we can use GitHub Actions to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.Quickly check the files needed for GitHub Actions build:      Ensure your Jekyll site has the file .github/workflows/pages-deploy.yml. Otherwise, create a new one and fill in the contents of the sample file, and the value of the on.push.branches should be the same as your repo’s default branch name.        Ensure your Jekyll site has file tools/deploy.sh. Otherwise, copy it from here to your Jekyll site.        Furthermore, if you have committed Gemfile.lock to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file:    $ bundle lock --add-platform x86_64-linux      After the above steps, rename your repository to &amp;lt;GH_USERNAME&amp;gt;.github.io on GitHub.Now publish your Jekyll site by:      Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named gh-pages will appear to store the built site files.        Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar, and then in the section Source of GitHub Pages, select the /(root) directory of branch gh-pages as the publishing source. Remember to click Save before leaving.          Visit your website at the address indicated by GitHub.  Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\    --env JEKYLL_ENV=production \\    --volume=&quot;$PWD:/srv/jekyll&quot; \\    jekyll/jekyll \\    jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server.UpgradingIt depends on how you use the theme:      If you are using the theme gem (there will be gem &quot;jekyll-theme-chirpy&quot; in the Gemfile), editing the Gemfile and update the version number of the theme gem, for example:    - gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.2&quot;, &quot;&amp;gt;= 3.2.1&quot;+ gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.3&quot;, &quot;&amp;gt;= 3.3.0&quot;        And then execute the following command:    $ bundle update jekyll-theme-chirpy        As the version upgrades, the critical files (for details, see the Startup Template) and configuration options will change. Please refer to the Upgrade Guide to keep your repo’s files in sync with the latest version of the theme.        If you forked from the source project (there will be gemspec in the Gemfile of your site), then merge the latest upstream tags into your Jekyll site to complete the upgrade.The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts.  "
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 11:40:00 +0530",
    





    "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  Note: The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of dateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:categories: [Animal, Insect]tags: [bee]Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsSimilar to TOC, the Disqus comments are loaded by default in each post, and the global switch is defined by variable comments in file _config.yml . If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesPreview imageIf you want to add an image to the top of the post contents, specify the attribute src, width, height, and alt for the image:---image:  src: /path/to/image/file  width: 1000   # in pixels  height: 400   # in pixels  alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. Later section “Image size” will also mention this.Image captionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_Image sizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Image positionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. For example:      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }        Limitation: Once the position of the image is specified, the image caption should not be added.Image shadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---Code BlockMarkdown symbols ``` can easily create a code block as follows:This is a plaintext code snippet.Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  Limitation: The Jekyll style highlight tag is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of the code block, you can append {: .nolineno} at the next line:```shellecho &#39;No more line numbers!&#39;```{: .nolineno}Specifying the FilenameYou may have noticed that the code language will be displayed on the left side of the header of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=&quot;path/to/file&quot; }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains &#39;Pack&#39; %}  This product&#39;s title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 09:03:00 +0530",
    





    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    Task list  TODO  Completed  Defeat COVID-19          Vaccine production      Economic recovery      People smile again      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line to shows the Block Quote.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images  Default (with caption)Full screen width and center alignment  Shadowshadow effect (visible in light mode)  Left aligned      Float to left    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”        Float to right    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”  Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then    echo &quot;The command was not successful.&quot;;    #do the needful / exitfi;Specific filename@import  &quot;colors/light-typography&quot;,  &quot;colors/dark-typography&quot;Reverse Footnote            The footnote source &amp;#8617;              The 2nd footnote source &amp;#8617;      "
  }
  
]

